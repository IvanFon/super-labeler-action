import { Issues, Project, PullRequests } from "../../contexts";
import { Condition } from "../util";
import { ConditionBranchMatches } from "./branchMatches";
import { ConditionChangesSize } from "./changesSize";
import { ConditionFilesMatch } from "./filesMatch";
import { ConditionisApproved } from "./isApproved";
import { ConditionIsDraft } from "./isDraft";
import { ConditionPendingReview } from "./pendingReview";
import { ConditionRequestedChanges } from "./requestedChanges";
export declare type PRCondition = Condition | ConditionBranchMatches | ConditionFilesMatch | ConditionIsDraft | ConditionChangesSize | ConditionPendingReview | ConditionRequestedChanges | ConditionisApproved;
export declare function getPRConditionHandler(this: Issues | PullRequests | Project, condition: PRCondition): ((this: import("..").UtilThis, condition: import("../util/creatorMatches").ConditionCreatorMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/descriptionMatches").ConditionDescriptionMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isOpen").ConditionIsOpen, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isStale").ConditionIsStale, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isAbandoned").ConditionIsAbandoned, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/hasLabel").ConditionHasLabel, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/titleMatches").ConditionTitleMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/and").ConditionAnd, props: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/or").ConditionOr, props: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/only").ConditionOnlyOne, props: import("..").UtilProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionBranchMatches, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionFilesMatch, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionIsDraft, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionChangesSize, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionPendingReview, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionRequestedChanges, pr: import("..").PRProps) => boolean) | ((this: PullRequests | Issues | Project, condition: ConditionisApproved, pr: import("..").PRProps) => boolean) | undefined;
export { PRProps } from "..";
//# sourceMappingURL=index.d.ts.map