import { Schedule } from "../../contexts";
import { Condition } from "../util";
export declare type ScheduleCondition = Condition;
export declare function getScheduleConditionHandler(this: Schedule, condition: ScheduleCondition): ((this: import("..").UtilThis, condition: import("../util/creatorMatches").ConditionCreatorMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/descriptionMatches").ConditionDescriptionMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isOpen").ConditionIsOpen, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isStale").ConditionIsStale, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/isAbandoned").ConditionIsAbandoned, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/hasLabel").ConditionHasLabel, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/titleMatches").ConditionTitleMatches, issue: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/and").ConditionAnd, props: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/or").ConditionOr, props: import("..").UtilProps) => boolean) | ((this: import("..").UtilThis, condition: import("../util/only").ConditionOnlyOne, props: import("..").UtilProps) => boolean) | undefined;
//# sourceMappingURL=index.d.ts.map